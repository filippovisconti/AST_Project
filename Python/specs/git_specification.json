{
  "description": "Note",
  "module_name": "ansible.builtin.git",
  "options": [
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "false",
      "deprecated": false,
      "description": "Will ensure or not that \u201c-o StrictHostKeyChecking=no\u201d is present as an ssh option. Be aware that this disables a protection against MITM attacks. Those using OpenSSH >= 7.5 might want to set ssh_opt to \u2018StrictHostKeyChecking=accept-new\u2019 instead, it does not remove the MITM issue but it does restrict it to the first attempt. Choices:  false \u2190 (default) true  ",
      "mutually_exclusive_with": [],
      "name": "accept_hostkey",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "false",
      "deprecated": false,
      "description": "As of OpenSSH 7.5, \u201c-o StrictHostKeyChecking=accept-new\u201d can be used which is safer and will only accepts host keys which are not present or are the same. if true, ensure that \u201c-o StrictHostKeyChecking=accept-new\u201d is present as an ssh option. Choices:  false \u2190 (default) true  ",
      "mutually_exclusive_with": [],
      "name": "accept_newhostkey",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Specify archive file path with extension. If specified, creates an archive file of the specified format containing the tree structure for the source tree. Allowed archive formats [\u201czip\u201d, \u201ctar.gz\u201d, \u201ctar\u201d, \u201ctgz\u201d]. This will clone and perform git archive from local directory as not all git servers support git archive. ",
      "mutually_exclusive_with": [],
      "name": "archive",
      "required": false,
      "type": "path"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Specify a prefix to add to each file path in archive. Requires archive to be specified. ",
      "mutually_exclusive_with": [],
      "name": "archive_prefix",
      "required": false,
      "type": "string"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "false",
      "deprecated": false,
      "description": "If true, repository will be created as a bare repo, otherwise it will be a standard repo with a workspace. Choices:  false \u2190 (default) true  ",
      "mutually_exclusive_with": [],
      "name": "bare",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "true",
      "deprecated": false,
      "description": "If false, do not clone the repository even if it does not exist locally. Choices:  false true \u2190 (default)  ",
      "mutually_exclusive_with": [],
      "name": "clone",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Create a shallow clone with a history truncated to the specified number or revisions. The minimum possible value is 1, otherwise ignored. Needs git>=1.9.1 to work correctly. ",
      "mutually_exclusive_with": [],
      "name": "depth",
      "required": false,
      "type": "integer"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "The path of where the repository should be checked out. This is equivalent to git clone [repo_url] [directory]. The repository named in repo is not appended to this path and the destination directory must be empty. This parameter is required, unless clone is set to false. ",
      "mutually_exclusive_with": [],
      "name": "dest",
      "required": true,
      "type": "path"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Path to git executable to use. If not supplied, the normal mechanism for resolving binary paths will be used. ",
      "mutually_exclusive_with": [],
      "name": "executable",
      "required": false,
      "type": "path"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "false",
      "deprecated": false,
      "description": "If true, any modified files in the working repository will be discarded.  Prior to 0.7, this was always true and could not be disabled.  Prior to 1.9, the default was true. Choices:  false \u2190 (default) true  ",
      "mutually_exclusive_with": [],
      "name": "force",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "A list of trusted GPG fingerprints to compare to the fingerprint of the GPG-signed commit. Only used when verify_commit=yes. Use of this feature requires Git 2.6+ due to its reliance on git\u2019s --raw flag to verify-commit and verify-tag. Default: [] ",
      "element_type": "str",
      "mutually_exclusive_with": [],
      "name": "gpg_whitelist",
      "required": false,
      "type": "list"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Specify an optional private key file path, on the target host, to use for the checkout. This ensures \u2018IdentitiesOnly=yes\u2019 is present in ssh_opts. ",
      "mutually_exclusive_with": [],
      "name": "key_file",
      "required": false,
      "type": "path"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "true",
      "deprecated": false,
      "description": "If false, repository will be cloned without the \u2013recursive option, skipping sub-modules. Choices:  false true \u2190 (default)  ",
      "mutually_exclusive_with": [],
      "name": "recursive",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Reference repository (see \u201cgit clone \u2013reference \u2026\u201d). ",
      "mutually_exclusive_with": [],
      "name": "reference",
      "required": false,
      "type": "string"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Add an additional refspec to be fetched. If version is set to a SHA-1 not reachable from any branch or tag, this option may be necessary to specify the ref containing the SHA-1. Uses the same syntax as the git fetch command. An example value could be \u201crefs/meta/config\u201d. ",
      "mutually_exclusive_with": [],
      "name": "refspec",
      "required": false,
      "type": "string"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Name of the remote. Default: \"origin\" ",
      "mutually_exclusive_with": [],
      "name": "remote",
      "required": false,
      "type": "string"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "git, SSH, or HTTP(S) protocol address of the git repository. ",
      "mutually_exclusive_with": [],
      "name": "repo",
      "required": true,
      "type": "string"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "The path to place the cloned repository. If specified, Git repository can be separated from working tree. ",
      "mutually_exclusive_with": [],
      "name": "separate_git_dir",
      "required": false,
      "type": "path"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "false",
      "deprecated": false,
      "description": "Clone only the history leading to the tip of the specified revision. Choices:  false \u2190 (default) true  ",
      "mutually_exclusive_with": [],
      "name": "single_branch",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "Options git will pass to ssh when used as protocol, it works via git\u2018s GIT_SSH/GIT_SSH_COMMAND environment variables. For older versions it appends GIT_SSH_OPTS (specific to this module) to the variables above or via a wrapper script. Other options can add to this list, like key_file and accept_hostkey. An example value could be \u201c-o StrictHostKeyChecking=no\u201d (although this particular option is better set by accept_hostkey). The module ensures that \u2018BatchMode=yes\u2019 is always present to avoid prompts. ",
      "mutually_exclusive_with": [],
      "name": "ssh_opts",
      "required": false,
      "type": "string"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "false",
      "deprecated": false,
      "description": "If true, submodules will track the latest commit on their master branch (or other branch specified in .gitmodules).  If false, submodules will be kept at the revision specified by the main project. This is equivalent to specifying the \u2013remote flag to git submodule update. Choices:  false \u2190 (default) true  ",
      "mutually_exclusive_with": [],
      "name": "track_submodules",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "The umask to set before doing any checkouts, or any other repository maintenance. ",
      "mutually_exclusive_with": [],
      "name": "umask",
      "required": false,
      "type": "mode"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "true",
      "deprecated": false,
      "description": "If false, do not retrieve new revisions from the origin repository. Operations like archive will work on the existing (old) repository and might not respond to changes to the options version or remote. Choices:  false true \u2190 (default)  ",
      "mutually_exclusive_with": [],
      "name": "update",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [
        "false",
        "true"
      ],
      "default": "false",
      "deprecated": false,
      "description": "If true, when cloning or checking out a version verify the signature of a GPG signed commit. This requires git version>=2.1.0 to be installed. The commit MUST be signed and the public key MUST be present in the GPG keyring. Choices:  false \u2190 (default) true  ",
      "mutually_exclusive_with": [],
      "name": "verify_commit",
      "required": false,
      "type": "boolean"
    },
    {
      "choices": [],
      "default": null,
      "deprecated": false,
      "description": "What version of the repository to check out. This can be the literal string HEAD, a branch name, a tag name. It can also be a SHA-1 hash, in which case refspec needs to be specified if the given revision is not already available. Default: \"HEAD\" ",
      "mutually_exclusive_with": [],
      "name": "version",
      "required": false,
      "type": "string"
    }
  ]
}